version: '3.8'
services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.5.0
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    depends_on:
      - zookeeper

  mysql:
    container_name: mysql
    image: mysql:8.2.0
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"

  client:
    container_name: client
    build:
      context: ./
      dockerfile: dockerfiles/Dockerfile-client
    restart: always
    ports:
      - "8080:8080"
    environment:
      KAFKA_URL: ${KAFKA_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_URL: jdbc:mysql://mysql:3306/${DB_NAME}?serverTimezone=UTC
      DB_DIALECT: org.hibernate.dialect.MySQLDialect
      DB_DRIVER_CLASS_NAME: com.mysql.jdbc.Driver
    depends_on:
      - kafka
      - mysql

  pizzeria:
    container_name: pizzeria
    build:
      context: ./
      dockerfile: dockerfiles/Dockerfile-pizzeria
    restart: always
    environment:
      KAFKA_URL: ${KAFKA_URL}
    depends_on:
      - client

  courier:
    container_name: courier
    build:
      context: ./
      dockerfile: dockerfiles/Dockerfile-courier
    restart: always
    environment:
      KAFKA_URL: ${KAFKA_URL}
    depends_on:
      - pizzeria
